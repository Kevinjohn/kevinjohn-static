


	.grayscale() { 
		-webkit-filter: grayscale(100%);
		-moz-filter: grayscale(100%);
		-ms-filter: grayscale(100%);
		-o-filter: grayscale(100%);
		filter: grayscale(100%);
		filter: url("/grayscale.svg#greyscale"); /* Firefox 4+ */
		filter: gray; /* IE 6-9 */
	}


	.transform(@string) {
	    -webkit-transform:  @string;
	    -moz-transform:     @string;
	    -ms-transform:      @string;
	    -o-transform:       @string;
	    transform:          @string;
	}
	
	.transform-origin (@x:center, @y:center) {
		-webkit-transform-origin: @x @y;
		-moz-transform-origin:    @x @y;
		-ms-transform-origin:     @x @y;
		-o-transform-origin:      @x @y;
		transform-origin:      	  @x @y;
	}
	
	
	.rotate(@deg) {
	    -webkit-transform:  rotate(@deg);
	    -moz-transform:     rotate(@deg);
	    -ms-transform:      rotate(@deg);
	    -o-transform:       rotate(@deg);
	    transform:          rotate(@deg);
	}
	 
	.scale(@factor) {
	    -webkit-transform:  scale(@factor);
	    -moz-transform:     scale(@factor);
	    -ms-transform:      scale(@factor);
	    -o-transform:       scale(@factor);
	    transform:          scale(@factor);
	}


.skew (@deg, @deg2) {
	-webkit-transform:       skew(@deg, @deg2);
	-moz-transform: 	 skew(@deg, @deg2);
	-ms-transform: 		 skew(@deg, @deg2);
	-o-transform: 		 skew(@deg, @deg2);
}
	 
	.translate (@x, @y) {
	    -webkit-transform:  translate(@x, @y);
	    -moz-transform:     translate(@x, @y);
	    -ms-transform:      translate(@x, @y);
	    -o-transform:       translate(@x, @y);
	    transform:          translate(@x, @y);
	}

.translate3d (@x, @y: 0, @z: 0) {
	-webkit-transform:       translate3d(@x, @y, @z);
	-moz-transform: 	 translate3d(@x, @y, @z);
	-ms-transform: 		 translate3d(@x, @y, @z);
	-o-transform: 		 translate3d(@x, @y, @z);
}

.perspective (@value: 1000) {
	-webkit-perspective: 	@value;
	-moz-perspective: 	@value;
	-ms-perspective: 	@value;
	perspective: 		@value;
}

	.transition(@string: all 0.3s ease-out) {
	    -webkit-transition: @string;
	    -moz-transition:    @string;
	    -ms-transition:     @string;
	    -o-transition:      @string;
	    transition:         @string;
	}	
	

	.box-sizing(@value: border-box) {
	    -webkit-box-sizing: @value;
	    -moz-box-sizing:    @value;
	    -box-sizing:        @value;
	}
	 
	*, *:before, *:after {
	    .box-sizing;
	}
	
		
	.placement(@top, @right, @bottom, @left) {
	    top: @top;
	    right: @right;
	    bottom: @bottom;
	    left: @left;
	}
	
	
	
	.border-radius (@radius: 5px) {
	    -webkit-border-radius: @radius;
	    -moz-border-radius: @radius;
	    border-radius: @radius;
	}
	
	
	.border-radius-custom (@topleft: 5px, @topright: 5px, @bottomleft: 5px, @bottomright: 5px) {
	    -webkit-border-radius: @topleft @topright @bottomright @bottomleft;
	    -moz-border-radius: @topleft @topright @bottomright @bottomleft;
	    border-radius: @topleft @topright @bottomright @bottomleft;
	}
	
	
	.box-shadow (@x: 0px, @y: 3px, @blur: 5px, @alpha: 0.5) {
	    -webkit-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
	    -moz-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
	    box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
	}
	
	
	.gradient (@origin: left, @start: #ffffff, @stop: #000000) {
	    background-color: @start;
	    
	    background-image: -webkit-linear-gradient(@origin, @start, @stop);
	    background-image: -moz-linear-gradient(@origin, @start, @stop);
	    background-image: -o-linear-gradient(@origin, @start, @stop);
	    background-image: -ms-linear-gradient(@origin, @start, @stop);
	    background-image: linear-gradient(@origin, @start, @stop);
		filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=@start, endColorstr=@stop,GradientType=0 )progid:DXImageTransform.Microsoft.AlphaImageLoader(src='../img/1x1.png');
		pointer-events: none;
	    
	}
	
	
	.opacity (@opacity: 0.5) {
		-webkit-opacity: 	@opacity;
		-moz-opacity: 		@opacity;
		opacity: 		@opacity;
	}


	